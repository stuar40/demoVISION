Notas del desarrollador
notas en tabla empresa BD
* validad numero de telefono no mayor de 12 caracteres
*validar nit caundo es repetido no permite ingresar
*validar nit no ingresar vacion
*validar nombre para queno lo ingresen vacio
* cuando un campo esta en null, le ingresas un espacio y luego lo borras intentas ingresar si almacena :/


Modulo Empresa
carga de imagnes tipo mediumblob por que acepta un maximo de 16megas
blob normal 600k

Agregar a BD campo Departamento 
Restricciones o validaciones


  $servername = "173.255.247.91";
    $database = "ssolucionesgt_testopticas";
    $username = "ssolucionesgt_estuardo";
    $password = "Eddy5795.";



    MODULO TIPO EMPLEADO 
    Agregar opcion Activar y desactivar TIpo de Empleado y PRivilegio
    ERROR al consular tildes desde base de datos o caracteres como ñÑ,


    MODULO NUEVO USUARIO 
      -Validar Formulariio
      -
      -


      MODULO NUEVO Proveedor
      Validar Formulariio modal de proveedro
      

      CREATE DEFINER=`ssolucionesgt_estuardo`@`45.5.116.2` PROCEDURE `INSERTgenerarCompra`(  		IN varnoDocumentoCompra varchar(75) , IN varSucursal_idSucursal int ,
                                            IN varProveedor_idProveedor int,	IN varUsuario_idUsuario int )
BEGIN
	DECLARE factura INT;
    DECLARE registros INT;
    DECLARE Maxid_tblcompras varchar(11) default null;
    DECLARE total DECIMAL(10.2);
    DECLARE nuevaExistencia INT;
    DECLARE actualExistencia INT;
    DECLARE tmpCodProducto INT;
    DECLARE tmpCantidadProducto INT;
    DECLARE acumulador INT;
    set acumulador = 1;
    
	set registros  = (SELECT COUNT(*) FROM tmp_Detalles where tmp_tknUsuario = varUsuario_idUsuario and tmp_TipoMovimiento='COMPRA');
	IF registros > 0 THEN
    Select ifnull(max(idCompras),0)+1 into Maxid_tblcompras from compras;
    INSERT INTO `compras` (`idCompras`, `noDocumentoCompra`, `estadoCompra`, 
			`Sucursal_idSucursal`, `Proveedor_idProveedor`, `Usuario_idUsuario`) 
            VALUES 
            (Maxid_tblcompras, varnoDocumentoCompra, 'ACTIVO', varSucursal_idSucursal,varProveedor_idProveedor, varUsuario_idUsuario);
            
            insert into detallecompra (`precioCompraDetalle`, `cantidadCompra`,
            `Compras_idCompras`, `Producto_idProducto`) SELECT  tmp_precio as precioCompraDetalle,
            tmp_cantidad as cantidadCompra,(Maxid_tblcompras) as Compras_idCompras,
            tmp_codProducto as Producto_idProducto FROM tmp_Detalles 
            where tmp_tknUsuario = varUsuario_idUsuario  and tmp_TipoMovimiento='COMPRA'; 
            
			
    ELSE
    Select 0;
    END IF;
    
END




Procedimiento Compra sin stock 
CREATE DEFINER=`ssolucionesgt_estuardo`@`190.104.119.75` PROCEDURE `INSERTgenerarCompra`(  		IN varnoDocumentoCompra varchar(75) , IN varSucursal_idSucursal int ,
                                            IN varProveedor_idProveedor int,	IN varUsuario_idUsuario int )
BEGIN
	DECLARE factura INT;
    DECLARE registros INT;
    DECLARE Maxid_tblcompras varchar(11) default null;
    DECLARE total DECIMAL(10,2);
    DECLARE subTotal DECIMAL(10,2);
    DECLARE impuestosTotal DECIMAL(10,2);
    DECLARE precioMinimoActual DECIMAL(10,2);
    DECLARE precioMinimoNuevo DECIMAL(10,2);
    DECLARE nuevaExistencia INT;
    DECLARE actualExistencia INT;
    DECLARE tmpCodProducto INT;
    DECLARE tmpCantidadProducto INT;
    DECLARE tmpPrecioProducto DECIMAL(10,2);
    DECLARE acumulador INT;
    set acumulador = 1;
    
    create temporary table IF NOT EXISTS tbl_tmpProductosCompra(
    id bigint NOT NULL auto_increment primary key,
    codProducto bigint,
    cantProducto int,
    preciProducto double);
    truncate table tbl_tmpProductosCompra;
    
	set registros  = (SELECT COUNT(*) FROM tmp_Detalles where tmp_tknUsuario = varUsuario_idUsuario and tmp_TipoMovimiento='COMPRA');
	IF registros > 0 THEN
    INSERT INTO  tbl_tmpProductosCompra (codProducto,cantProducto,preciProducto) SELECT tmp_codProducto,tmp_cantidad,tmp_precio  FROM tmp_Detalles where tmp_tknUsuario = varUsuario_idUsuario  and tmp_TipoMovimiento='COMPRA';
    
    Select ifnull(max(idCompras),0)+1 into Maxid_tblcompras from compras;
    INSERT INTO `compras` (`idCompras`, `noDocumentoCompra`, `estadoCompra`, 
			`Sucursal_idSucursal`, `Proveedor_idProveedor`, `Usuario_idUsuario`) 
            VALUES 
            (Maxid_tblcompras, varnoDocumentoCompra, 'ACTIVO', varSucursal_idSucursal,varProveedor_idProveedor, varUsuario_idUsuario);
            
            insert into detallecompra (`precioCompraDetalle`, `cantidadCompra`,
            `Compras_idCompras`, `Producto_idProducto`) SELECT  tmp_precio as precioCompraDetalle,
            tmp_cantidad as cantidadCompra,(Maxid_tblcompras) as Compras_idCompras,
            tmp_codProducto as Producto_idProducto FROM tmp_Detalles 
            where tmp_tknUsuario = varUsuario_idUsuario  and tmp_TipoMovimiento='COMPRA'; 
            
			WHILE acumulador <= registros DO
            SELECT codProducto,cantProducto,preciProducto INTO  tmpCodProducto, tmpCantidadProducto,tmpPrecioProducto from  tbl_tmpProductosCompra WHERE id = acumulador;
            
            #SELECT stockFactura,precioMinimo into actualExistencia,precioMinimoActual from stock where Producto_idProducto = tmpCodProducto and Sucursal_idSucursal;
            
            set subTotal = tmpCantidadProducto * tmpPrecioProducto;
            
            UPDATE `detallecompra` SET 
            `subtotalCompraDetalle` = subTotal, 
            `estadoDetalle` = 'ACTIVO' 
            WHERE (`Producto_idProducto` = tmpCodProducto and `Compras_idCompras`= Maxid_tblcompras and `precioCompraDetalle`= tmpPrecioProducto);
			
            set acumulador = acumulador+1;
            END WHILE;
            
            Set total = (SELECT SUM(tmp_cantidad * tmp_precio) from tmp_Detalles WHERE tmp_tknUsuario = varUsuario_idUsuario  and tmp_TipoMovimiento='COMPRA');
            set impuestosTotal=0;
            UPDATE `compras` SET 
            `Subtotal` = total, 
            `impuestosCompra` = impuestosTotal, 
            `totalCompra` = total   WHERE (`idCompras` = Maxid_tblcompras);
            
            DELETE FROM tmp_Detalles WHERE tmp_tknUsuario = varUsuario_idUsuario  and tmp_TipoMovimiento='COMPRA';
            truncate table tbl_tmpProductosCompra;
            SELECT * FROM  compras where idCompras = Maxid_tblcompras;

    ELSE
    Select 0;
    END IF;
    
END